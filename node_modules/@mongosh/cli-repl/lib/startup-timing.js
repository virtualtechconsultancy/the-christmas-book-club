"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTimingData = exports.markTime = void 0;
const jsTimingEntries = [];
const timing = !process.env.MONGOSH_SHOW_TIMING_DATA
    ? {
        markTime: () => {
        },
        getTimingData: () => [],
    }
    : process.boxednode
        ? {
            markTime: process.boxednode.markTime,
            getTimingData: process.boxednode.getTimingData,
        }
        : {
            markTime: (label) => {
                jsTimingEntries.push([label, process.hrtime.bigint()]);
            },
            getTimingData: () => {
                const data = jsTimingEntries.sort((a, b) => Number(a[1] - b[1]));
                return data.map(([label, time]) => [label, Number(time - data[0][1])]);
            },
        };
exports.markTime = timing.markTime;
exports.getTimingData = timing.getTimingData;
if (process.env.MONGOSH_SHOW_TIMING_DATA) {
    process.on('exit', function () {
        const rawTimingData = (0, exports.getTimingData)();
        if (process.env.MONGOSH_SHOW_TIMING_DATA === 'json') {
            console.log(JSON.stringify(rawTimingData));
        }
        else {
            console.table(rawTimingData.map(([label, time], i) => [
                label,
                `${(time / 1000000).toFixed(2)}ms`,
                i > 0
                    ? `+${((time - rawTimingData[i - 1][1]) / 1000000).toFixed(2)}ms`
                    : '',
            ]));
        }
    });
}
(0, exports.markTime)('cli-repl timing initialized');
//# sourceMappingURL=startup-timing.js.map